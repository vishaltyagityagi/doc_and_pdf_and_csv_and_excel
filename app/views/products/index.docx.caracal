#-----------------------------------------------------
# page settings
#-----------------------------------------------------


docx.page_numbers true do
  align :center
end

docx.font name: 'Courier New'

docx.style id: 'AltFont', name: 'altFont', font: 'Palatino'


#-----------------------------------------------------
# cover
#-----------------------------------------------------

7.times do
  docx.p
end



12.times do
  docx.p
end
docx.p 'Caracal Library', style: 'Title', align: :right
docx.p 'Capabilities Overview', style: 'Subtitle', align: :right
docx.p
docx.p
docx.p Date.today.strftime('%B %d, %Y'), color: '666666', align: :right


#-----------------------------------------------------
# introduction
#-----------------------------------------------------

docx.page
docx.h1 'Introduction'
docx.hr

docx.h2 'Overview'
docx.p 'Caracal is a pure Ruby library for generating dynamic Microsoft Word documents. While the library does not support the entire Open XML specification, most common Word features are available.'
docx.p
docx.p 'Major features include:'
docx.ul do
  li 'Custom page sizes and margins'
  li 'Custom styles (including the manipulation of font, size, color, alignment, margins, leading, etc.)'
  li 'Paragraph text, headings, and external links'
  li 'Ordered and unordered lists'
  li 'Images'
  li 'Tables'
  li 'Page numbers'
end
docx.p

docx.h2 'Purpose'
docx.p do
  text 'This document provides a high-level review of Caracal\'s capabilities. The idea is to provide product specialists with enough information so that when they design reports and other output files, the requirements can be supported by the library.'
end
docx.p

docx.h2 'Note'
docx.p 'This document was created using Caracal.', italic: true


@products.each do |p|
  docx.h2 p.name
  docx.h2 p.desc

end

#-----------------------------------------------------
# paragraphs
#-----------------------------------------------------

docx.page
docx.h1 'Paragraphs'
docx.hr

docx.p 'Like all word processing software programs, Caracal\'s chief strength is text formatting.  It is capable of rendering text in any font, size, color, effect, and alignment you might reasonably want to specify.'
docx.p

docx.h2 'Fonts'
docx.p 'Caracal can render text in any font supported on the client machine.'
docx.p
docx.p 'This sentence is rendered in Arial.'
docx.p 'This sentence is rendered in Palantino.', style: 'AltFont'
docx.p do
  text 'This part is rendered in Arial '
  text 'and then this part should be in smaller Courier New ', font: 'Courier New', size: 16
  text 'and now back to Arial.'
end
docx.p

docx.h2 'Colors'
docx.p 'Caracal can render text in any RGB color you specify.'
docx.p
docx.p 'This sentence is rendered in blue.', color: '3366cc'
docx.p 'This sentence is rendered in red.', color: 'cc3300'
docx.p

docx.h2 'Highlights'
docx.p 'Caracal can render background colors in any RGB color you specify.'
docx.p
docx.p 'This paragraph is completely highlighted.', bgcolor: 'b6d7a8'
docx.p do
  text 'This sentence contains a '
  text 'highlighted run', bgcolor: 'b6d7a8'
  text ' within the text.'
end
docx.p

docx.h2 'Sizes'
docx.p 'Caracal can render text in any point size you specify.'
docx.p
docx.p 'This sentence is rendered in 10pt.'
docx.p 'This sentence is rendered in 12pt.', size: 24
docx.p 'This sentence is rendered in 14pt.', size: 28
docx.p

docx.h2 'Effects'
docx.p 'Caracal can render text with the standard set of effects.'
docx.p
docx.p 'This sentence is rendered with a bold effect.', bold: true
docx.p 'This sentence is rendered with a italic effect.', italic: true
docx.p 'This sentence is rendered with a underline effect.', underline: true
docx.p

docx.h2 'Alignment'
docx.p 'Caracal can render text with the standard set of alignments.'
docx.p
docx.p 'This sentence is rendered with a left alignment.'
docx.p 'This sentence is rendered with a center alignment.', align: :center
docx.p 'This sentence is rendered with a right alignment.', align: :right
docx.p 'These sentences are rendered with the text aligned with both the left and right margins. This sentence is just to make the paragraph long enough to span more than one line so the effect is visible.', align: :both
docx.p

docx.h2 'Combined'
docx.p 'Caracal can render text with any combination of the preceding capabilities.'
docx.p
docx.p do
  text 'This sentence is rendered with the standard font, size, color, etc. '
  text 'Then we can switch the color. ', color: '3366cc'
  text 'Then we can change the effect. ', bold: true, italic: true
  text 'We can change the size and underline the text, too', size: 24, underline: true
  text '.'
  br
  text 'This sentence follows a line break.'
end
docx.p
docx.p 'You get the idea.'


#-----------------------------------------------------
# Headings/Links/Lists
#-----------------------------------------------------

docx.page
docx.h1 'Headings, Links, & Lists'
docx.hr

docx.p 'Headings, links, and lists are simply extensions of Caracal\'s paragraph functionality. Generally speaking, any formatting feature supported by paragraphs are also supported by headings, links, and lists.'
docx.p

docx.h2 'Headings'
docx.p 'In addition to the Heading 1 and Heading 2 styles used liberally throughout this document, Caracal supports Heading 3, Heading 4, Heading 5, and Heading 6 by default. This should provide a sufficient number of heading styles for most documents, but if you need more, you can always define a custom style to achieve the same effect.'
docx.p
docx.h3 'This sentence is rendered as a Heading 3.'
docx.h4 'This sentence is rendered as a Heading 4.'
docx.h5 'This sentence is rendered as a Heading 5.'
docx.h6 'This sentence is rendered as a Heading 6.'
docx.p

docx.h2 'Links'
docx.p 'Caracal supports adding external links to your document. Similar to headings, links support all the same options as paragraphs.'
docx.p
docx.p do
  text 'This sentence has a link to the '
  link 'Google', 'http://www.google.com'
  text ' homepage.'
end
docx.p

docx.h2 'Lists'
docx.p 'Caracal supports both ordered and unordered lists. By default, Caracal establishes 9 levels of styles for each type of list. This should provide a sufficient number of styles for most documents, but if you need more, you can always define more levels.'
docx.p
docx.p 'List items can be formatted using any options available to standard text.'
docx.p
docx.p 'This is an ordered list with nested levels:'
docx.ol do
  li 'This is the first item.'
  li do
    text 'This is a second item.'
    ol do
      li 'This is a nested item.'
    end
  end
  li do
    text 'This is a third item with a '
    link 'link', 'http://www.google.com'
    text '.'
    br
    text 'This sentence follows a line break.'
  end
end
docx.p
docx.p 'This is an unordered list with nested levels:'
docx.ul do
  li 'This is the first item.'
  li do
    text 'This is a second item.'
    ul do
      li 'This is a nested item.'
    end
  end
  li do
    text 'This is a third item with a '
    link 'link', 'http://www.google.com'
    text '.'
    br
    text 'This sentence follows a line break.'
  end
end
docx.p
docx.p 'Ordered and unordered lists can be mixed at any level and styled however you like:'
docx.ul do
  li 'This is the first item.'
  li do
    text 'This is a second item.', bold: true
    ol do
      li 'This is a nested item.', italic: true
      li 'This is another nested item.', color: '3366cc'
    end
  end
  li do
    text 'This is a third item with a '
    link 'link', 'http://www.google.com'
    text '.'
  end
end
docx.p


#-----------------------------------------------------
# Images
#-----------------------------------------------------

docx.page
docx.h1 'Images'
docx.hr

docx.p 'Caracal allows images to be embedded in and distributed with the document. Images can be sized to any dimension and aligned to the left, center, or right.'
docx.p
docx.p 'This image is left aligned.'
docx.p
docx.p 'This image is center aligned.', align: :center
docx.p
docx.p 'This image is right aligned.', align: :right
docx.p


#-----------------------------------------------------
# Tables
#-----------------------------------------------------

row1 = ['Key', 'Value']
row2 = ['Key 1', 'Value 1']
row3 = ['Key 2', 'Value 2']
row4 = ['Key 3', 'Value 3']
c1 = Caracal::Core::Models::TableCellModel.new margins: { top: 0, bottom: 100, left: 0, right: 200 } do
  table [row1.dup, row2.dup, row3.dup, row4.dup], border_size: 4 do
    cell_style cols[0],  bold: true, background: 'dddddd'
    cell_style rows[0],  bold: true, background: '3366cc', color: 'ffffff'
    cell_style cells[3], italic: true, color: 'cc0000'
    cell_style cells,    size: 18, margins: { top: 100, bottom: 0, left: 100, right: 100 }
  end
end
c2 = Caracal::Core::Models::TableCellModel.new margins: { top: 0, bottom: 100, left: 0, right: 200 } do
  p 'This layout uses nested tables (the outer table has no border) to provide a caption to the table data.'
end

docx.page
docx.h1 'Tables'
docx.hr

docx.p 'Caracal supports table structures for displaying tabular data.  Both borders and text styling can be set on a cell-by-cell basis.'
docx.p

docx.h2 'Simple Tables'
docx.table [row1.dup, row2.dup, row3.dup, row4.dup], border_size: 4 do
  cell_style rows[0],    bold: true,   background: '3366cc', color: 'ffffff'
  cell_style rows[-1],   bold: true,   background: 'dddddd'
  cell_style cells[5],   italic: true, color: 'cc0000'
  cell_style cols[0],    width: 6000
  cell_style cells,      size: 18, margins: { top: 100, bottom: 0, left: 100, right: 100 }
end
docx.p

docx.h2 'Nested Tables'
docx.table [[c1,c2]] do
  cell_style cols[0], width: 6000
end
docx.p

docx.h2 'Other Notes'
docx.p  'In theory, tables can nest infinitely.  As a practical matter, nesting will, of course, be limited by the dimensions of the page'
docx.p
docx.p  'With the exception of page breaks, anything that can be rendered on the document can also be rendered within a table cell.'


#-----------------------------------------------------
# Settings
#-----------------------------------------------------

docx.page
docx.h1 'Page Settings'
docx.hr

docx.h2 'Size'
docx.p 'Caracal allows you to specify page dimensions of any width and height. By default, Caracal initializes a page with US standard A4 dimensions.'
docx.p

docx.h2 'Margins'
docx.p 'Caracal allows you to specify page margins of any reasonable size. By default, Caracal initializes 1.0in margins on each side of the document.'
docx.p

docx.h2 'Numbers'
docx.p 'Caracal allows you to add page numbers to the footer. If elected, page numbers can be aligned to the left, center, or right. By default, page numbers are not included.'
docx.p
